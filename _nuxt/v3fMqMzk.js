import{I as P,O as x,S as f,j as C,z as D,k as p,P as B}from"./BX_ooAjd.js";const M=()=>{const s=P(),v=x(),l=f("content",()=>[]),y=f("filteredContent",()=>[]),m=f("contentLoading",()=>!1),h=f("contentError",()=>null),c=f("activeFilters",()=>({})),g=f("activeSort",()=>"featured"),a=f("searchQuery",()=>""),d=C(()=>Object.entries(s.platform.contentTypes).filter(([e,o])=>o.enabled).map(([e])=>e)),r=C(()=>{const e=v.path;for(const[o,t]of Object.entries(s.platform.contentTypes))if(e.startsWith(t.path))return o;return null}),i=C(()=>{if(!r.value)return l.value;const o={games:"game",tools:"tool"}[r.value]||r.value;return l.value.filter(t=>t.type===o)}),u=()=>{let e=[...i.value];if(a.value){const t=a.value.toLowerCase();e=e.filter(n=>n.title.toLowerCase().includes(t)||n.description.toLowerCase().includes(t)||n.tags.some(w=>w.toLowerCase().includes(t)))}Object.entries(c.value).forEach(([t,n])=>{n.length>0&&(e=e.filter(w=>{const L=w[t];return n.includes(L)}))});const o={featured:(t,n)=>(n.featured?1:0)-(t.featured?1:0),newest:(t,n)=>new Date(n.metadata.createdAt).getTime()-new Date(t.metadata.createdAt).getTime(),oldest:(t,n)=>new Date(t.metadata.createdAt).getTime()-new Date(n.metadata.createdAt).getTime(),alphabetical:(t,n)=>t.title.localeCompare(n.title),popular:(t,n)=>(n.featured?1:0)-(t.featured?1:0)};o[g.value]&&e.sort(o[g.value]),y.value=e},A=e=>{const o={};return i.value.forEach(t=>{const n=t[e];n&&(o[n]=(o[n]||0)+1)}),Object.entries(o).map(([t,n])=>({value:t,label:t.charAt(0).toUpperCase()+t.slice(1),count:n}))},b=()=>[{value:"featured",label:"Featured",field:"featured",order:"desc"},{value:"newest",label:"Newest",field:"metadata.createdAt",order:"desc"},{value:"oldest",label:"Oldest",field:"metadata.createdAt",order:"asc"},{value:"alphabetical",label:"A-Z",field:"title",order:"asc"}],F=(e,o)=>{c.value[e]||(c.value[e]=[]);const t=c.value[e].indexOf(o);t>-1?c.value[e].splice(t,1):c.value[e].push(o),u()},E=()=>{c.value={},a.value="",u()},O=e=>{g.value=e,u()},S=e=>{a.value=e,u()},j=e=>l.value.find(o=>o.slug===e),T=e=>e.type==="game",I=e=>e.type==="tool";return D(l,()=>{u()}),{content:p(l),filteredContent:p(y),loading:p(m),error:p(h),enabledTypes:d,currentType:r,contentByType:i,activeFilters:p(c),activeSort:p(g),searchQuery:p(a),toggleFilter:F,clearFilters:E,setSort:O,setSearch:S,getFilterOptions:A,getSortOptions:b,getContentBySlug:j,applyFilters:u,isGame:T,isTool:I}},$=()=>{const{content:s,loading:v,error:l,applyFilters:y}=M(),m=async()=>{v.value=!0,l.value=null;try{const a=await $fetch("/data/content.json");if(a&&a.content)s.value=a.content,y();else throw new Error("Invalid content data")}catch(a){l.value=a instanceof Error?a.message:"Failed to load content",console.error("Error loading content:",a)}finally{v.value=!1}},h=async(a,d)=>{v.value=!0,l.value=null;try{const r=await $fetch(a,{params:d,headers:{"Content-Type":"application/json"}});if(r&&Array.isArray(r))s.value=r,y();else throw new Error("Invalid API response")}catch(r){l.value=r instanceof Error?r.message:"Failed to load content from API",console.error("Error loading content from API:",r)}finally{v.value=!1}},c=async a=>{try{const d=s.value.find(i=>i.slug===a);if(d)return d;const r=await $fetch("/data/content.json");if(r&&r.content){const i=r.content.find(u=>u.slug===a);if(i)return s.value.find(u=>u.id===i.id)||(s.value=[...s.value,i]),i}return null}catch(d){return console.error("Error loading content by slug:",d),null}},g=async()=>{await m()};return B(()=>{s.value.length===0&&m()}),{loadContent:m,loadContentFromAPI:h,loadContentBySlug:c,refreshContent:g}};export{$ as a,M as u};
